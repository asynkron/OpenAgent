{
  "stage": "openai-response",
  "completion": {
    "id": "resp_061bda23eccb547f0068e7583de0c48198a682a63b4fac2aa5",
    "object": "response",
    "created_at": 1759991870,
    "status": "completed",
    "background": false,
    "billing": {
      "payer": "developer"
    },
    "error": null,
    "incomplete_details": null,
    "instructions": null,
    "max_output_tokens": null,
    "max_tool_calls": null,
    "model": "gpt-5-codex",
    "output": [
      {
        "id": "rs_061bda23eccb547f0068e7583f053081988d5cffa968b98c4f",
        "type": "reasoning",
        "summary": []
      },
      {
        "id": "fc_061bda23eccb547f0068e758498fcc8198a25c75b990e84afb",
        "type": "function_call",
        "status": "completed",
        "arguments": "{\"message\":\"Running `echo hello`.\",\"command\":{\"shell\":{\"command\":\"echo hello\",\"cwd\":\".\"}}}",
        "call_id": "call_EnnzD9YAOjNE60bzeNQPaAZs",
        "name": "open-agent"
      }
    ],
    "parallel_tool_calls": true,
    "previous_response_id": null,
    "prompt_cache_key": null,
    "reasoning": {
      "effort": "low",
      "summary": null
    },
    "safety_identifier": null,
    "service_tier": "default",
    "store": true,
    "temperature": 1,
    "text": {
      "format": {
        "type": "text"
      },
      "verbosity": "medium"
    },
    "tool_choice": {
      "type": "function",
      "name": "open-agent"
    },
    "tools": [
      {
        "type": "function",
        "description": "Return the response envelope that matches the OpenAgent protocol (message, plan, and command fields).",
        "name": "open-agent",
        "parameters": {
          "type": "object",
          "additionalProperties": false,
          "required": ["message"],
          "properties": {
            "message": {
              "type": "string",
              "description": "Markdown formatted message to the user"
            },
            "plan": {
              "type": "array",
              "maxItems": 5,
              "items": {
                "$ref": "#/$defs/planStep"
              },
              "description": "You MUST provide a plan when have a set goal, NEVER drop/reset a plan without discussion, the plan stays on until otherwise agreed upon. Use [] when resetting to a new plan."
            }
          },
          "$defs": {
            "planStep": {
              "type": "object",
              "required": ["id", "title", "status", "priority", "waitingForId"],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "running", "completed", "failed", "abandoned"]
                },
                "priority": {
                  "type": "integer"
                },
                "waitingForId": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "age": {
                  "type": "integer"
                },
                "command": {
                  "$ref": "#/$defs/command"
                },
                "observation": {
                  "type": "object"
                }
              }
            },
            "command": {
              "type": "object",
              "required": ["confirmed", "shell", "run", "cwd"],
              "additionalProperties": false,
              "properties": {
                "confirmed": {
                  "type": "integer",
                  "description": "1337 if you actually read and understood this spec. REQUIRED!"
                },
                "shell": {
                  "type": "string",
                  "description": "Shell executable to launch when running commands."
                },
                "run": {
                  "type": "string",
                  "description": "Command string to execute in the provided shell."
                },
                "cwd": {
                  "type": "string",
                  "description": "Working directory for shell execution."
                },
                "timeout_sec": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Optional timeout guard for long-running commands."
                },
                "filter_regex": {
                  "type": "string",
                  "description": "Optional regex used to filter command output."
                },
                "tail_lines": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Optional number of trailing lines to return from output."
                }
              }
            }
          }
        },
        "strict": false
      }
    ],
    "top_logprobs": 0,
    "top_p": 1,
    "truncation": "disabled",
    "usage": {
      "input_tokens": 2732,
      "input_tokens_details": {
        "cached_tokens": 0
      },
      "output_tokens": 550,
      "output_tokens_details": {
        "reasoning_tokens": 512
      },
      "total_tokens": 3282
    },
    "user": null,
    "metadata": {},
    "output_text": ""
  },
  "responseText": "{\"message\":\"Running `echo hello`.\",\"plan\":[{\"step\":\"1\",\"title\":\"Execute nested shell\",\"status\":\"running\",\"command\":{\"shell\":{\"command\":\"echo hello\",\"cwd\":\".\"}}}]}"
}
