name: Publish package to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag to publish (e.g. v2.1.0)'
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    name: Run quality gates and publish
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '20'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine release tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ inputs.tag }}" >> "$GITHUB_ENV"
          else
            echo "TAG_NAME=${{ github.event.release.tag_name }}" >> "$GITHUB_ENV"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          scope: '@asynkron'
          always-auth: true

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm test

      - name: Verify release tag matches package version
        run: npm run release:verify-tag -- "$TAG_NAME"

      - name: Check if npm version already exists
        id: version_check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> "$GITHUB_ENV"
          if npm view "@asynkron/openagent@$PACKAGE_VERSION" version > /dev/null 2>&1; then
            echo "already_published=true" >> "$GITHUB_OUTPUT"
            echo "Version $PACKAGE_VERSION already exists on npm; skipping publish."
          else
            echo "already_published=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to npm
        if: steps.version_check.outputs.already_published != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "NPM_TOKEN secret is missing; cannot publish." >&2
            exit 1
          fi
          npm publish --provenance --access public
